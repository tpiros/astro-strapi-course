---
import fetchApi from '../../../lib/strapi';

import Layout from '../../../layouts/Layout.astro';

import MarkdownComponent from '../../../components/MarkdownComponent.astro';

// export async function getStaticPaths() {
//   const articles = await fetchApi({
//     endpoint: 'blogs',
//     wrappedByKey: 'data',
//     locale: 'es',
//   });

//   return articles.map((article) => ({
//     params: { slug: article.attributes.slug },
//     props: article,
//   }));
// }

let article;
const { slug } = Astro.params;
try {
  article = await fetchApi({
    endpoint: 'blogs',
    wrappedByKey: 'data',
    wrappedByList: true,
    locale: 'es',
    query: {
      'filters[slug][$eq]': slug || '',
    },
  });
} catch (error) {
  return Astro.redirect('/404');
}

// const article = Astro.props;

function formatRelativeTime(dateString) {
  const date = new Date(dateString);
  const now = new Date();
  const rtf = new Intl.RelativeTimeFormat('es', { numeric: 'auto' });

  const daysDifference = -Math.round((now - date) / (1000 * 60 * 60 * 24));

  if (daysDifference < 1) {
    const hoursDifference = -Math.round((now - date) / (1000 * 60 * 60));
    if (hoursDifference < 1) {
      const minutesDifference = -Math.round((now - date) / (1000 * 60));
      return rtf.format(minutesDifference, 'minute');
    }
    return rtf.format(hoursDifference, 'hour');
  }

  return rtf.format(daysDifference, 'day');
}
const relativeTime = formatRelativeTime(article.attributes.publishedAt);
---

<Layout>
  <img
    src={import.meta.env.STRAPI_URL + article.attributes.image.data.attributes.formats.small.url}
  />

  <h1>{article.attributes.title}</h1>
  <p>Art√≠culo escrito {relativeTime}.</p>
  <MarkdownComponent content={article.attributes.content} />
</Layout>
